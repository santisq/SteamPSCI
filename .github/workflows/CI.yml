name: Press Build

on:
  push:
    branches:
      - master
      - main
      - ci
      - production
    tags:
      - '*'
  release:
    types:
      - published
  pull_request:
    branches:
      - master
      - main
      - production
jobs:
  build:
    name: 👷 Build
    runs-on: ubuntu-20.04
    steps:
      # Workaround: https://github.com/actions/runner/issues/520#issuecomment-720508121
      - if: always()
        name: 🐛 Get Debug Status
        id: debugStatus
        run: |
          echo '::set-output name=runnerDebug::${{secrets.ACTIONS_RUNNER_DEBUG}}'
          echo '::set-output name=stepDebug::${{secrets.ACTIONS_STEP_DEBUG}}'

      - name: 🚚 Checkout
        uses: actions/checkout@v4
        with:
          # Required for GitVersion
          #TODO: Calculate fetch depth up to the parent branch's last version tag (this is all gitversion really needs)
          fetch-depth: 0
      - name: ⚡ Install PowerShell Modules
        uses: JustinGrote/ModuleFast-action@v0.0.1

      - if: steps.debugStatus.outputs.stepDebug
        name: 🔬 Powershell Environment Information
        shell: pwsh
        run: |
          "::group::Powershell Modules"
          ($ENV:PSModulePath).split([io.path]::pathseparator) | where {Test-Path $_} | Get-ChildItem
          "::endgroup"

          "::group::Variables"
          Get-Variable | select name,value | Out-String
          "::endgroup"

          "::group::Environment"
          dir env: | Out-String
          "::endgroup"

      - name: 👷 Build
        id: build
        shell: pwsh
        run: |
          $GLOBAL:ProgressPreference = 'SilentlyContinue'
          if ('${{secrets.ACTIONS_STEP_DEBUG}}') {$GLOBAL:VerbosePreference = 'continue'}
          ./build .,Package

      - name: 📦 Capture Powershell Module
        uses: actions/upload-artifact@v2
        with:
          name: PSModule
          path: BuildOutput/${{ steps.build.outputs.moduleName }}

      - name: 📦 Capture Powershell Zip
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.moduleName }}-${{ steps.build.outputs.nugetVersion }}.zip
          #FIXME: Double zip
          path: BuildOutput/*.zip

      - name: 📦 Capture Powershell Nuget Package
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.moduleName }}.${{ steps.build.outputs.nugetVersion }}.nupkg
          path: BuildOutput/*.nupkg

      - if: always() && runner.os != 'Windows' && steps.debugStatus.outputs.runnerDebug
        name: 🐛 Debug via SSH if ACTIONS_RUNNER_DEBUG secret is set
        uses: lhotari/action-upterm@v1

      #TODO: Move to dedicated function
      - name: 📦 Update Draft Github Release
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/ci'
        shell: pwsh
        run: |
          ./build Press.UpdateGitHubRelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
